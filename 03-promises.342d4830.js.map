{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAiBH,SAASC,cAAc,mBA4B9C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CApCKN,SAASC,cAAc,SAE/Ba,iBAAiB,UAE3B,SAAuBC,GACrBA,EAAMC,iBACN,MAAMC,EAAaC,SAASnB,EAAWoB,OACjCC,EAAYF,SAAShB,EAAUiB,OAC/BE,EAAcH,SAASf,EAAegB,OAC5C,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAaC,GAAK,EAAE,CAItClB,EAHsBkB,EAAI,EACNL,EAAaK,EAAIF,GAGlCG,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACrBkB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,MAAW,CACvEqB,QAAO,KACR,IAEEC,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MACvBkB,EAAA3B,GAAS4B,OAAOI,QAAQ,sBAAoBxB,QAAeC,MAAW,CACrEqB,QAAS,KACR,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst firstDelay = document.querySelector('[name=\"delay\"]');\nconst stepDelay = document.querySelector('[name=\"step\"]');\nconst promisesNumber = document.querySelector('[name=\"amount\"]');\nconst submitBtn = document.querySelector('.form');\n\nsubmitBtn.addEventListener('submit', onSubmitClick);\n\nfunction onSubmitClick(event) {\n  event.preventDefault();\n  const delayValue = parseInt(firstDelay.value);\n  const stepValue = parseInt(stepDelay.value);\n  const amountValue = parseInt(promisesNumber.value);\n  for (let i = 0; i < amountValue; i += 1){\n    const promiseNumber = i + 1;\n    const currentTime = delayValue + i * stepValue;\n\n    createPromise(promiseNumber, currentTime)\n      .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n    timeout: 7000,\n  },);\n  })\n      .catch(({ position, delay }) => {\n   Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n    timeout: 7000,\n  },);\n  });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$firstDelay","document","querySelector","$47d4ff9957288465$var$stepDelay","$47d4ff9957288465$var$promisesNumber","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayValue","parseInt","value","stepValue","amountValue","i","then","$parcel$interopDefault","Notify","success","timeout","catch","failure"],"version":3,"file":"03-promises.342d4830.js.map"}